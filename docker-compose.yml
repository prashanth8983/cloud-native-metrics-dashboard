version: '3.8'

services:
  metrics-api:
    build:
      context: ./metrics-api
      dockerfile: Dockerfile
    container_name: metrics-api
    ports:
      - "8080:8080"
    environment:
      - SERVER_PORT=8080
      - PROMETHEUS_URL=http://prometheus:9090
      - PROMETHEUS_TIMEOUT=30
      - LOG_LEVEL=info
      - LOG_FORMAT=json
      - CACHE_ENABLED=true
      - CACHE_TTL=60
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/v1/live"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
    volumes:
      - type: tmpfs
        target: /tmp
    user: "1000:1000"
    mem_limit: 512m
    cpus: 0.5
    labels:
      com.example.service: metrics-api
    networks:
      - metrics-network
    depends_on:
      - prometheus
      - mongodb

  metrics-dashboard:
    build:
      context: ./dashboard
      dockerfile: Dockerfile
    container_name: metrics-dashboard
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - VITE_API_URL=http://metrics-api:8080/api/v1
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
    mem_limit: 256m
    cpus: 0.25
    labels:
      com.example.service: metrics-dashboard
    networks:
      - metrics-network
    depends_on:
      - metrics-api

  prometheus:
    image: prom/prometheus:v2.47.0
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    networks:
      - metrics-network

  test-metrics-app:
    image: prom/statsd-exporter:latest
    container_name: test-metrics-app
    ports:
      - "9102:9102"
    command:
      - "--web.listen-address=:9102"
      - "--statsd.listen-udp=:9125"
    networks:
      - metrics-network
    labels:
      com.example.service: test-metrics-app

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - metrics-api
      - metrics-dashboard

    networks:
      - metrics-network

  mongodb:
    image: mongo:6.0
    container_name: mongodb
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=example
    volumes:
      - mongo-data:/data/db
    networks:
      - metrics-network

volumes:
  prometheus-data:
  mongo-data:

networks:
  metrics-network:
    driver: bridge
